{"version":3,"sources":["components/Logo.jsx","data/theme.js","hooks/useLocalStorage.js","components/DarkCodeToggle.jsx","components/DarkModeToggle.jsx","components/ThemeSelector.jsx","components/ThemeToggle.jsx","components/NavBar.jsx","data/placeholder.js","components/MarkdownEdit.jsx","components/MarkdownPreview.jsx","components/WorkArea.jsx","App.js","serviceWorker.js","index.js","icons/github.svg","icons/tick.svg","icons/theme_icon.svg"],"names":["Logo","themeData","name","primaryColor","accentColor","textColor","getItem","key","initialValue","item","window","localStorage","JSON","parse","error","console","log","useLocalStorage","useState","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","DarkCodeToggle","isDarkMode","setDarkMode","Switch","checked","onChange","e","target","DarkModeToggle","isCodeDark","setCodeDark","useEffect","document","body","classList","add","remove","styleSheet","getElementById","setAttribute","newMode","getBackgroundStyle","backgroundColor","ThemeSelector","isVisible","setVisible","activeTheme","setActiveTheme","themeSelectorRef","useRef","hideDropDown","current","parentElement","contains","addEventListener","removeEventListener","themeButtons","map","theme","onClick","handleThemeButtonClick","className","style","src","tickIcon","alt","toLowerCase","ref","display","changeTheme","setProperty","linkColor","ThemeToggle","dropDownVisible","setDropDownVisible","currentState","themeIcon","NavBar","open","GitHub","placeholder","copyToClipBoard","id","select","execCommand","getSelection","removeAllRanges","selection","empty","MarkdownEdit","content","changeContent","setOpen","editorRef","handleClose","Tooltip","title","blob","Blob","type","a","createElement","download","href","URL","createObjectURL","click","focus","event","preventDefault","Snackbar","autoHideDuration","onClose","Alert","severity","elevation","variant","AlertTitle","getHtml","markdown","marked","MarkdownPreview","html","setHtml","handle","useFullScreenHandle","Prism","highlightAll","link","active","exit","enter","dangerouslySetInnerHTML","__html","WorkArea","markDown","setMarkDown","orientation","setOrientation","changeOrientation","innerWidth","onresize","sizes","minSize","expandToMin","gutterAlign","direction","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"8JAiDeA,I,yBClCAC,EAfG,CACd,CACIC,KAAM,SACNC,aAAc,UACdC,YAAa,UACbC,UAAW,WAEf,CACIH,KAAM,QACNC,aAAc,UACdC,YAAa,UACbC,UAAW,Y,0BCQbC,EAAU,SAACC,EAAKC,GAClB,IACI,IAAMC,EAAOC,OAAOC,aAAaL,QAAQC,GACzC,OAAOE,EAAOG,KAAKC,MAAMJ,GAAQD,EACnC,MAAOM,GAEL,OADAC,QAAQC,IAAIF,GACLN,IAIAS,EA3BS,SAACV,EAAKC,GAC1B,MAAsCU,mBAASZ,EAAQC,EAAKC,IAA5D,mBAAOW,EAAP,KAAoBC,EAApB,KAaA,MAAO,CAACD,EAXS,SAACE,GACd,IACI,IAAMC,EACFD,aAAiBE,SAAWF,EAAMF,GAAeE,EACrDD,EAAeE,GACfZ,OAAOC,aAAaa,QAAQjB,EAAKK,KAAKa,UAAUH,IAClD,MAAOR,GACLC,QAAQC,IAAIF,OCITY,MAbf,YAAsD,IAA5BC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,YAKpC,OACE,oCACE,8CACA,kBAACC,EAAA,EAAD,CAAQC,QAASH,EAAYI,SAPN,SAACC,GAC1BJ,EAAYI,EAAEC,OAAOH,cCgCVI,MAhCf,WACE,MAAkCjB,EAAgB,cAAc,GAAhE,mBAAOU,EAAP,KAAmBC,EAAnB,KACA,EAAkCX,EAAgB,gBAAgB,GAAlE,mBAAOkB,EAAP,KAAmBC,EAAnB,KAqBA,OAnBAC,qBAAU,WACJV,EACFW,SAASC,KAAKC,UAAUC,IAAI,QAE5BH,SAASC,KAAKC,UAAUE,OAAO,UAEhC,CAACf,IAEJU,qBAAU,WACR,IAAMM,EAAU,kBAAcR,EAAa,OAAS,QAApC,QAChBG,SAASM,eAAe,mBAAmBC,aAAa,OAAQF,KAC/D,CAACR,IASF,oCACE,yCACA,kBAACN,EAAA,EAAD,CAAQC,QAASH,EAAYI,SATN,SAACC,GAC1B,IAAMc,EAAUd,EAAEC,OAAOH,QACfM,IAAVU,GACAlB,EAAYkB,MAOV,kBAAC,EAAD,CAAgBnB,WAAYQ,EAAYP,YAAaQ,MCwB3D,IAAMW,EAAqB,SAACC,GAAD,MAAsB,CAC/CA,gBAAiBA,IAGJC,EAvDf,YAAgF,IAAvDC,EAAsD,EAAtDA,UAAWC,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,eAErDC,EAAmBC,iBAAO,MAMhClB,qBAAU,WACR,IAAMmB,EAAe,SAACxB,IAElBsB,EAAiBG,SAChBH,EAAiBG,QAAQC,cAAcC,SAAS3B,EAAEC,SAClDqB,EAAiBG,QAAQE,SAAS3B,EAAEC,SAErCkB,GAAW,IAIf,OADAb,SAASsB,iBAAiB,QAASJ,GAC5B,WACLlB,SAASuB,oBAAoB,QAASL,MAEvC,CAACN,EAAUC,IAEd,IAAMW,EAAe7D,EAAU8D,KAAI,SAACC,GAClC,OACE,yBACEC,QAAS,kBAvBgB,SAACD,GAC9BX,EAAeW,GAsBIE,CAAuBF,IACtCG,UAAU,aACVC,MAAOrB,EAAmBiB,EAAM7D,cAChCI,IAAKyD,EAAM9D,MACV8D,EAAM9D,OAASkD,EAAYlD,MAC1B,yBAAKmE,IAAKC,IAAUC,IAAG,gBAAWP,EAAM9D,KAAKsE,mBAMrD,OAEE,yBACEL,UAAU,oBACVM,IAAKnB,EACLc,MAAO,CAAEM,QAASxB,EAAY,QAAU,SACxC,4CACA,yBAAKiB,UAAU,aAAaL,GAC5B,kBAAC,EAAD,Q,iBClBN,IAAMa,EAAc,SAACX,GACnB1B,SAASC,KAAK6B,MAAMQ,YAAY,kBAAmBZ,EAAM7D,cACzDmC,SAASC,KAAK6B,MAAMQ,YAAY,iBAAkBZ,EAAM5D,aACxDkC,SAASC,KAAK6B,MAAMQ,YAAY,eAAgBZ,EAAMa,UAAYb,EAAMa,UAAYb,EAAM7D,cAC1F6D,EAAM3D,WAAaiC,SAASC,KAAK6B,MAAMQ,YAAY,2BAA4BZ,EAAM3D,YAGxEyE,EAlCf,WACE,MAAsC7D,EAAgB,QAAShB,EAAU,IAAzE,mBAAOmD,EAAP,KAAoBC,EAApB,KACA,EAA8CnC,oBAAS,GAAvD,mBAAO6D,EAAP,KAAwBC,EAAxB,KAUA,OARA3C,qBAAU,WACRsC,EAAYvB,KACX,CAACA,IAOF,yBAAKe,UAAU,gBACb,yBAAKA,UAAU,aAAaF,QANN,WACxBe,GAAmB,SAACC,GAAD,OAAmBA,OAMlC,yBAAKZ,IAAKa,IAAWX,IAAI,gBAEzB,kBAAC,EAAD,CACErB,UAAW6B,EACX5B,WAAY6B,EACZ5B,YAAaA,EACbC,eAAgBA,MCAX8B,MAtBf,WACE,OACE,yBAAKhB,UAAU,UACb,wBAAIA,UAAU,SAAd,qDAIA,yBAAKA,UAAU,aACb,kBAAC,EAAD,MACA,yBACEF,QAAS,kBACPvD,OAAO0E,KAAK,wCAEdjB,UAAU,SACVE,IAAKgB,IACLd,IAAI,Q,mCC0BCe,EA5CG,qlC,yBC2FlB,IAAMC,EAAkB,SAACC,GACvBlD,SAASM,eAAe4C,GAAIC,SAC5BnD,SAASoD,YAAY,QACjBhF,OAAOiF,aACTjF,OAAOiF,eAAeC,kBACbtD,SAASuD,WAClBvD,SAASuD,UAAUC,SAIRC,EA9Ff,YAAmD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,cAC/B,EAAwB/E,oBAAS,GAAjC,mBAAOkE,EAAP,KAAac,EAAb,KACMC,EAAY5C,iBAAO,MAEzBlB,qBAAU,WACQ,KAAZ2D,EACFrF,aAAaa,QAAQ,WAAY8D,GAEjC3E,aAAaa,QAAQ,WAAYwE,KAElC,CAACA,IAEJ,IAyBMI,EAAc,WAClBF,GAAQ,IAGV,OACE,yBAAK/B,UAAU,wBACb,yBAAKA,UAAU,iBACb,wCACA,yBAAKA,UAAU,iBACb,kBAACkC,EAAA,EAAD,CAASC,MAAM,qBACb,4BAAQrC,QAzBU,WAC1B,IAAIsC,EAAO,IAAIC,KAAK,CAACR,GAAU,CAC7BS,KAAM,eAEJC,EAAIpE,SAASqE,cAAc,KAC/BD,EAAEE,SAAW,cACbF,EAAEG,KAAOnG,OAAOoG,IAAIC,gBAAgBR,GACpCG,EAAEM,SAkB4C7C,UAAU,OAC9C,kBAAC,IAAD,QAGJ,kBAACkC,EAAA,EAAD,CAASC,MAAM,qBACb,4BAAQrC,QApBM,WACtBsB,EAAgB,UAChBW,GAAQ,IAkBkC/B,UAAU,OAC1C,kBAAC,IAAD,QAGJ,kBAACkC,EAAA,EAAD,CAASC,MAAM,SACb,4BAAQrC,QAxCO,WACvBgC,EAAc,IACdE,EAAU1C,QAAQwD,SAsCyB9C,UAAU,OAC3C,kBAAC,IAAD,UAKR,8BACEA,UAAU,WACV9C,MAAO2E,EACPjE,SAtDqB,SAACmF,GAC1BA,EAAMC,iBACNlB,EAAciB,EAAMjF,OAAOZ,QAqDvBmE,GAAG,SACHf,IAAK0B,IAEP,kBAACiB,EAAA,EAAD,CAAUhC,KAAMA,EAAMiC,iBAAkB,IAAMC,QAASlB,GACrD,kBAACmB,EAAA,EAAD,CACED,QAASlB,EACToB,SAAS,UACTC,UAAW,EACXC,QAAQ,UACR,kBAACC,EAAA,EAAD,eALF,+C,2KCtBR,IAAMC,EAAU,SAACC,GACf,OAAOC,EAAOD,IAGDE,EArDf,YAAuC,IAAZ/B,EAAW,EAAXA,QACzB,EAAwB9E,mBAAS0G,EAAQ5B,IAAzC,mBAAOgC,EAAP,KAAaC,EAAb,KACMC,EAASC,cAoBf,OAlBA9F,qBAAU,WACR+F,IAAMC,kBAGRhG,qBAAU,WACR4F,EAAQL,EAAQ5B,MACf,CAACA,IAaF,yBAAK7B,UAAU,2BACb,yBAAKA,UAAU,iBACb,uCACA,yBAAKA,UAAU,iBACf,kBAACkC,EAAA,EAAD,CAASC,MAAM,iBACb,4BAAQnC,UAAU,MAAMF,QAbR,WACtB,IAAIqE,EAAOhG,SAASqE,cAAc,KAClC2B,EAAKzB,KAAL,yBAA8BmB,GAC9BM,EAAK1B,SAAW,cAChB0B,EAAKtB,UAUG,kBAAC,IAAD,QAGF,kBAACX,EAAA,EAAD,CAASC,MAAM,cACb,4BAAQnC,UAAU,MAAMF,QArBT,kBACvBiE,EAAOK,OAASL,EAAOM,OAASN,EAAOO,UAqB7B,kBAAC,IAAD,UAKR,kBAAC,IAAD,CAAYP,OAAQA,GAClB,yBACE1C,GAAG,UACHrB,UAAS,mBAAc+D,EAAOK,OAAS,qBAAuB,IAC9DG,wBAAyB,CAAEC,OAAQX,QChB9BY,MA9Bf,WACE,IAAIf,EAAWlH,aAAaL,QAAQ,aAAegF,EACnD,EAAgCpE,mBAAS2G,GAAzC,mBAAOgB,EAAP,KAAiBC,EAAjB,KACA,EAAsC5H,mBAAS,cAA/C,mBAAO6H,EAAP,KAAoBC,EAApB,KAUA,OARA3G,qBAAU,WACR,IAAI4G,EAAoB,WACtBD,EAAetI,OAAOwI,WAAa,IAAM,WAAa,eAExDD,IACAvI,OAAOyI,SAAWF,IACjB,IAGD,yBAAK9E,UAAU,aACb,kBAAC,IAAD,CACEA,UAAU,eACViF,MAAO,CAAC,GAAI,IACZC,QAAyB,eAAhBN,EAA+B,IAAM,IAC9CO,aAAa,EACbC,YAAY,SACZC,UAAWT,GAEX,kBAAC,EAAD,CAAc/C,QAAS6C,EAAU5C,cAAe6C,IAChD,kBAAC,EAAD,CAAiB9C,QAAS6C,O,OChBnBY,MATf,WACE,OACE,oCACC,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGCC,EAAcC,QACW,cAA7BjJ,OAAOkJ,SAASC,UAEe,UAA7BnJ,OAAOkJ,SAASC,UAEhBnJ,OAAOkJ,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1B7J,QAAQC,IACN,iHAKEiJ,GAAUA,EAAOY,UACnBZ,EAAOY,SAASP,KAMlBvJ,QAAQC,IAAI,sCAGRiJ,GAAUA,EAAOa,WACnBb,EAAOa,UAAUR,WAO5BS,OAAM,SAAAjK,GACLC,QAAQD,MAAM,4CAA6CA,MC3FjEkK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF5I,SAASM,eAAe,SDanB,SAAkBqH,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIpD,IAAIqE,OAAwBzK,OAAOkJ,SAAS/C,MACpDuE,SAAW1K,OAAOkJ,SAASwB,OAIvC,OAGF1K,OAAOkD,iBAAiB,QAAQ,WAC9B,IAAMoG,EAAK,UAAMmB,OAAN,sBAEPzB,IAgEV,SAAiCM,EAAOC,GAEtCoB,MAAMrB,EAAO,CACXsB,QAAS,CAAE,iBAAkB,YAE5BjB,MAAK,SAAAkB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CzB,UAAUC,cAAcyB,MAAMvB,MAAK,SAAAC,GACjCA,EAAauB,aAAaxB,MAAK,WAC7B3J,OAAOkJ,SAASkC,eAKpB/B,EAAgBC,EAAOC,MAG1Bc,OAAM,WACLhK,QAAQC,IACN,oEAvFA+K,CAAwB/B,EAAOC,GAI/BC,UAAUC,cAAcyB,MAAMvB,MAAK,WACjCtJ,QAAQC,IACN,iHAMJ+I,EAAgBC,EAAOC,OCtC/BE,I,mBCZA6B,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,wC","file":"static/js/main.93e60b84.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Logo() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      id=\"svg\"\n      viewBox=\"0 0 419 419\">\n      <g id=\"Logo\" transform=\"translate(-375 -489)\">\n        <g id=\"Background\">\n          <g\n            id=\"svg-background\"\n            data-name=\"Rectangle 1\"\n            transform=\"translate(375 489)\"\n            fill=\"#2d2e35\"\n            stroke=\"#fff\"\n            strokeWidth=\"30\">\n            <rect width=\"419\" height=\"419\" stroke=\"none\" />\n            <rect x=\"15\" y=\"15\" width=\"389\" height=\"389\" fill=\"none\" />\n          </g>\n        </g>\n        <g id=\"Text\">\n          <text\n            id=\"Md\"\n            transform=\"translate(400 786)\"\n            fill=\"#fff\"\n            fontSize=\"180\"\n            fontFamily=\"ProductSans-Regular, Product Sans\">\n            <tspan x=\"0\" y=\"0\">\n              MD\n            </tspan>\n          </text>\n          <text\n            id=\"_01\"\n            data-name=\"01\"\n            transform=\"translate(436 598)\"\n            fill=\"#fff\"\n            fontSize=\"60\"\n            fontFamily=\"ProductSans-Regular, Product Sans\">\n            <tspan x=\"0\" y=\"0\">\n\n            </tspan>\n          </text>\n        </g>\n      </g>\n    </svg>\n  );\n}\n\nexport default Logo;\n","const themeData = [\n    {\n        name: \"Indigo\",\n        primaryColor: \"#3f51b5\",\n        accentColor: \"#7986cb\",\n        textColor: \"#212121\"\n    },\n    {\n        name: \"Black\",\n        primaryColor: \"#082032\",\n        accentColor: \"#2C394B\",\n        textColor: \"#ffffff\"\n    },\n];\n\nexport default themeData;\n","import { useState } from 'react';\n\nconst useLocalStorage = (key, initialValue) => {\n    const [storedValue, setStoredValue] = useState(getItem(key, initialValue));\n\n    const setValue = (value) => {\n        try {\n            const valueToStore =\n                value instanceof Function ? value(storedValue) : value;\n            setStoredValue(valueToStore);\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return [storedValue, setValue];\n}\n\nconst getItem = (key, initialValue) => {\n    try {\n        const item = window.localStorage.getItem(key);\n        return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n        console.log(error);\n        return initialValue;\n    }\n}\n\nexport default useLocalStorage;\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\n\nfunction DarkCodeToggle({ isDarkMode, setDarkMode }) {\n  const handleSwitchToggle = (e) => {\n    setDarkMode(e.target.checked);\n  };\n\n  return (\n    <>\n      <h4>Code Dark Mode</h4>\n      <Switch checked={isDarkMode} onChange={handleSwitchToggle} />\n    </>\n  );\n}\n\nexport default DarkCodeToggle;\n","import React, { useEffect } from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport DarkCodeToggle from \"./DarkCodeToggle\";\n\nfunction DarkModeToggle() {\n  const [isDarkMode, setDarkMode] = useLocalStorage(\"isDarkMode\", false);\n  const [isCodeDark, setCodeDark] = useLocalStorage(\"codeDarkMode\", false);\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.body.classList.add(\"dark\");\n    } else {\n      document.body.classList.remove(\"dark\");\n    }\n  }, [isDarkMode]);\n\n  useEffect(() => {\n    const styleSheet = `/styles/${isCodeDark ? \"dark\" : \"light\"}.css`;\n    document.getElementById(\"code-stylesheet\").setAttribute(\"href\", styleSheet);\n  }, [isCodeDark]);\n\n  const handleSwitchToggle = (e) => {\n    const newMode = e.target.checked;\n    newMode ? setCodeDark(true) : setCodeDark(false);\n    setDarkMode(newMode);\n  };\n\n  return (\n    <>\n      <h4>Dark Mode</h4>\n      <Switch checked={isDarkMode} onChange={handleSwitchToggle} />\n      <DarkCodeToggle isDarkMode={isCodeDark} setDarkMode={setCodeDark} />\n    </>\n  );\n}\n\nexport default DarkModeToggle;\n","import React, { useEffect, useRef } from \"react\";\nimport themeData from \"../data/theme\";\nimport tickIcon from \"../icons/tick.svg\";\nimport DarkModeToggle from \"./DarkModeToggle\";\n\nfunction ThemeSelector({ isVisible, setVisible, activeTheme, setActiveTheme }) {\n\n  const themeSelectorRef = useRef(null);\n\n  const handleThemeButtonClick = (theme) => {\n    setActiveTheme(theme);\n  };\n\n  useEffect(() => {\n    const hideDropDown = (e) => {\n      if (\n        themeSelectorRef.current &&\n        !themeSelectorRef.current.parentElement.contains(e.target) &&\n        !themeSelectorRef.current.contains(e.target)\n      ) {\n        setVisible(false);\n      }\n    };\n    document.addEventListener(\"click\", hideDropDown);\n    return () => {\n      document.removeEventListener(\"click\", hideDropDown);\n    };\n  }, [isVisible,setVisible]);\n\n  const themeButtons = themeData.map((theme) => {\n    return (\n      <div\n        onClick={() => handleThemeButtonClick(theme)}\n        className=\"toggle-btn\"\n        style={getBackgroundStyle(theme.primaryColor)}\n        key={theme.name}>\n        {theme.name === activeTheme.name && (\n          <img src={tickIcon} alt={`theme-${theme.name.toLowerCase}`} />\n        )}\n      </div>\n    );\n  });\n\n  return (\n    \n    <div\n      className=\"all-theme-wrapper\"\n      ref={themeSelectorRef}\n      style={{ display: isVisible ? \"block\" : \"none\" }}>\n      <h3>Change Theme</h3>\n      <div className=\"theme-btn\">{themeButtons}</div>\n      <DarkModeToggle />\n    </div>\n  );\n}\n\nconst getBackgroundStyle = (backgroundColor) => ({\n  backgroundColor: backgroundColor,\n});\n\nexport default ThemeSelector;\n","import React, { useState, useEffect } from \"react\";\nimport ThemeSelector from \"../components/ThemeSelector\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport themeData from \"../data/theme\";\nimport themeIcon from \"../icons/theme_icon.svg\";\n\nfunction ThemeToggle() {\n  const [activeTheme, setActiveTheme] = useLocalStorage(\"theme\", themeData[0]);\n  const [dropDownVisible, setDropDownVisible] = useState(false);\n\n  useEffect(() => {\n    changeTheme(activeTheme);\n  }, [activeTheme]);\n\n  const handleToggleClick = () => {\n    setDropDownVisible((currentState) => !currentState);\n  };\n\n  return (\n    <div className=\"theme-toggle\">\n      <div className=\"theme-icon\" onClick={handleToggleClick}>\n        <img src={themeIcon} alt=\"Theme Icon\" />\n      </div>\n        <ThemeSelector\n          isVisible={dropDownVisible}\n          setVisible={setDropDownVisible}\n          activeTheme={activeTheme}\n          setActiveTheme={setActiveTheme}\n        />\n    </div>\n  );\n}\n\nconst changeTheme = (theme) => {\n  document.body.style.setProperty(\"--primary-color\", theme.primaryColor);\n  document.body.style.setProperty(\"--accent-color\", theme.accentColor);\n  document.body.style.setProperty(\"--link-color\", theme.linkColor ? theme.linkColor : theme.primaryColor);\n  theme.textColor && document.body.style.setProperty(\"--nav-section-text-color\", theme.textColor);\n};\n\nexport default ThemeToggle;\n","import React from \"react\";\nimport MarkDownLogo from \"./Logo\";\nimport GitHub from \"../icons/github.svg\";\nimport ThemeToggle from \"./ThemeToggle\";\n\nfunction NavBar() {\n  return (\n    <nav className=\"navbar\">\n      <h3 className=\"title\">\n\n        &nbsp;MkD - The Free and OpenSource Markdown Editor\n      </h3>\n      <div className=\"nav-right\">\n        <ThemeToggle />\n        <img\n          onClick={() =>\n            window.open(\"https://github.com/vishnureddys/mkd\")\n          }\n          className=\"github\"\n          src={GitHub}\n          alt=\"\"\n        />\n      </div>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","//This is the default placeholder Markup for the App\n\nconst placeholder=`# Hi 👋\n\nWelcome to MkD.\n\nMkD is a simple markdown editor built with React. I've hosted this application on GitHub Pages. Feel free to contribute to this project on [GitHub](https://github.com/vishnureddys/mkd)\n\n## What can you write here?\n\n1. Code\n  Inline code like  \\`<div></div>\\` or\n  block code like\n\n  \\`\\`\\`\n  npm install\n  \\`\\`\\`\nThe code you write here also has syntax highlighting. You can look at the python code example shown below.\n\\`\\`\\`python\nimport pandas as pd\na = 10\nb = 20\nc = a+b\n\\`\\`\\`\n2. Blockquote\n> You can add quotes here.\n\n3. Different Text Style\n  * **Bold**\n  * *Italic*\n  * ~~Strikethrough~~\n\n4. Tables\n\n    | Name          | Age           | Salary|\n    | ------------- |:-------------:| -----:|\n    | Vishnu        | 21            | $56000|\n    | Reddy         | 24            |$120000|\n    | Tommy         | 18            | $1000 |\n\n5. Images\nYou can even use images in this editor. All you need is a link to that image. You can also store the images on Imgur, if privacy isn't a concern.\n\n    ![React](https://reactjs.org/logo-og.png)\n`;\n\nexport default placeholder;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport placeholder from \"../data/placeholder\";\nimport { CgSoftwareDownload as SaveIcon } from \"react-icons/cg\";\nimport { MdContentCopy as CopyIcon } from \"react-icons/md\";\nimport { MdDelete as CleanIcon } from \"react-icons/md\";\nimport { Tooltip } from \"@material-ui/core\";\n\nfunction MarkdownEdit({ content, changeContent }) {\n  const [open, setOpen] = useState(false);\n  const editorRef = useRef(null);\n\n  useEffect(() => {\n    if (content === \"\") {\n      localStorage.setItem(\"markdown\", placeholder);\n    } else {\n      localStorage.setItem(\"markdown\", content);\n    }\n  }, [content]);\n\n  const handleEditorChange = (event) => {\n    event.preventDefault();\n    changeContent(event.target.value);\n  };\n\n  const handleClearClick = () => {\n    changeContent(\"\");\n    editorRef.current.focus();\n  };\n\n  const handleDownloadClick = () => {\n    let blob = new Blob([content], {\n      type: \"text/plain\",\n    });\n    let a = document.createElement(\"a\");\n    a.download = \"markdown.md\";\n    a.href = window.URL.createObjectURL(blob);\n    a.click();\n  };\n\n  const handleCopyClick = () => {\n    copyToClipBoard(\"editor\");\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"markdown-edit scroll\">\n      <div className=\"section-title\">\n        <h3>Markdown</h3>\n        <div className=\"right-section\">\n          <Tooltip title=\"Download Markdown\">\n            <button onClick={handleDownloadClick} className=\"btn\">\n              <SaveIcon />\n            </button>\n          </Tooltip>\n          <Tooltip title=\"Copy to Clipboard\">\n            <button onClick={handleCopyClick} className=\"btn\">\n              <CopyIcon />\n            </button>\n          </Tooltip>\n          <Tooltip title=\"Clean\">\n            <button onClick={handleClearClick} className=\"btn\">\n              <CleanIcon />\n            </button>\n          </Tooltip>\n        </div>\n      </div>\n      <textarea\n        className=\"editable\"\n        value={content}\n        onChange={handleEditorChange}\n        id=\"editor\"\n        ref={editorRef}></textarea>\n\n      <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\n        <Alert\n          onClose={handleClose}\n          severity=\"success\"\n          elevation={6}\n          variant=\"filled\">\n          <AlertTitle>Copied</AlertTitle>\n          The markdown is copied to your clipboard\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nconst copyToClipBoard = (id) => {\n  document.getElementById(id).select();\n  document.execCommand(\"copy\");\n  if (window.getSelection) {\n    window.getSelection().removeAllRanges();\n  } else if (document.selection) {\n    document.selection.empty();\n  }\n};\n\nexport default MarkdownEdit;\n","import React, { useState, useEffect } from \"react\";\nimport * as marked from \"marked\";\nimport Prism from \"prismjs\"; //css for Prism is imported in ThemeSelector\nimport \"../utils/prism-imports\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport { CgSoftwareDownload as SaveIcon } from \"react-icons/cg\";\nimport { RiFullscreenFill as FullScreenIcon } from \"react-icons/ri\";\nimport { Tooltip } from \"@material-ui/core\";\n\nfunction MarkdownPreview({ content }) {\n  const [html, setHtml] = useState(getHtml(content));\n  const handle = useFullScreenHandle();\n\n  useEffect(() => {\n    Prism.highlightAll();\n  });\n\n  useEffect(() => {\n    setHtml(getHtml(content));\n  }, [content]);\n\n  const handleFullScreen = () =>\n    handle.active ? handle.exit() : handle.enter();\n\n  const handleSaveClick = () => {\n    let link = document.createElement(\"a\");\n    link.href = `data:text/html,${html}`;\n    link.download = \"export.html\";\n    link.click();\n  };\n\n  return (\n    <div className=\"markdown-preview scroll\">\n      <div className=\"section-title\">\n        <h3>Preview</h3>\n        <div className=\"right-section\">\n        <Tooltip title=\"Download HTML\">\n          <button className=\"btn\" onClick={handleSaveClick}>\n            <SaveIcon />\n          </button>\n          </Tooltip>\n          <Tooltip title=\"FullScreen\">\n            <button className=\"btn\" onClick={handleFullScreen}>\n              <FullScreenIcon />\n            </button>\n          </Tooltip>\n        </div>\n      </div>\n      <FullScreen handle={handle}>\n        <div\n          id=\"preview\"\n          className={`html-div ${handle.active ? \"preview-fullscreen\" : \"\"}`}\n          dangerouslySetInnerHTML={{ __html: html }}></div>\n      </FullScreen>\n    </div>\n  );\n}\n\nconst getHtml = (markdown) => {\n  return marked(markdown);\n};\n\nexport default MarkdownPreview;\n","import React, { useState, useEffect } from \"react\";\nimport Split from \"react-split\";\nimport MarkdownEdit from \"./MarkdownEdit\";\nimport MarkdownPreview from \"./MarkdownPreview\";\nimport placeholder from \"../data/placeholder\";\n\nfunction WorkArea() {\n  let markdown = localStorage.getItem(\"markdown\") || placeholder;\n  const [markDown, setMarkDown] = useState(markdown);\n  const [orientation, setOrientation] = useState(\"horizontal\");\n\n  useEffect(() => {\n    let changeOrientation = () => {\n      setOrientation(window.innerWidth < 600 ? \"vertical\" : \"horizontal\");\n    };\n    changeOrientation();\n    window.onresize = changeOrientation;\n  }, []);\n\n  return (\n    <div className=\"work-area\">\n      <Split\n        className=\"wrapper-card\"\n        sizes={[50, 50]}\n        minSize={orientation === \"horizontal\" ? 300 : 100}\n        expandToMin={true}\n        gutterAlign=\"center\"\n        direction={orientation}\n      >\n        <MarkdownEdit content={markDown} changeContent={setMarkDown} />\n        <MarkdownPreview content={markDown} />\n      </Split>\n    </div>\n  );\n}\n\nexport default WorkArea;\n","import React from 'react';\nimport NavBar from './components/NavBar'\nimport WorkArea from './components/WorkArea'\nimport './App.scss';\n\nfunction App() {\n  return (\n    <>\n     <NavBar/>\n     <WorkArea/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/github.c654049a.svg\";","module.exports = __webpack_public_path__ + \"static/media/tick.165de949.svg\";","module.exports = __webpack_public_path__ + \"static/media/theme_icon.21b19a9a.svg\";"],"sourceRoot":""}